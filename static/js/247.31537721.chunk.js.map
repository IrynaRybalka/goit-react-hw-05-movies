{"version":3,"file":"static/js/247.31537721.chunk.js","mappings":"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","sources":["Api/api.js","components/Cast/Cast.jsx"],"sourcesContent":["import axios from 'axios';\nconst API_KEY = 'b3d3319c72d7aa893f843e4082479da1';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\n\nexport const getTrending = async () => {\n  const response = await axios.get(`trending/movie/day?api_key=${API_KEY}`);\n  return response.data;\n};\n\nexport const searchMovies = async query => {\n  const response = await axios.get(\n    `search/movie?api_key=${API_KEY}&language=en-US&query=${query}&page=1&include_adult=false`\n  );\n  return response.data;\n};\n\nexport const getMovieDetails = async id => {\n  const response = await axios.get(\n    `movie/${id}?api_key=${API_KEY}&language=en-US`\n  );\n  return response.data;\n};\n\nexport const getMovieCredits = async id => {\n  const response = await axios.get(\n    `movie/${id}/credits?api_key=${API_KEY}&language=en-US`\n  );\n  return response.data;\n};\n\nexport const getReviews = async id => {\n  const response = await axios.get(\n    `movie/${id}/reviews?api_key=${API_KEY}&language=en-US&page=1`\n  );\n  return response.data;\n};","import { getMovieCredits } from 'Api/api';\nimport{ useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\n\n\nconst Cast = () => {\n    const [castList, setCastList] = useState([]);\n    const {movieId} = useParams();\n\n    useEffect(()=> {\n        getMovieCredits(movieId).then(data=>setCastList(data.cast));\n    },[movieId]);\n\n    return(\n        <ul>\n  {castList.length > 0\n        ? castList.map(({ id, name, profile_path, character }) => (\n            <li key={id}>\n              <img\n                src={\n                  profile_path\n                    ? `https://image.tmdb.org/t/p/w200${profile_path}`\n                    : `http://www.suryalaya.org/images/no_image.jpg`\n                }\n                alt=\"actor\"\n                loading=\"lazy\"\n                width={120}\n                height={180}\n              />\n              <h3>{name}</h3>\n              <p> Character: {character}</p>\n            </li>\n          ))\n        : \"Sorry, there isn't any info :(\"}\n        </ul>\n    )\n}\n\n\nexport default Cast;"],"names":["API_KEY","axios","getTrending","_ref","_asyncToGenerator","_regeneratorRuntime","_callee","response","_context","prev","next","concat","sent","abrupt","data","stop","apply","arguments","searchMovies","_ref2","_callee2","query","_context2","_x","getMovieDetails","_ref3","_callee3","id","_context3","_x2","getMovieCredits","_ref4","_callee4","_context4","_x3","getReviews","_ref5","_callee5","_context5","_x4","_useState","useState","_useState2","_slicedToArray","castList","setCastList","movieId","useParams","useEffect","then","cast","_jsx","children","length","map","name","profile_path","character","_jsxs","src","alt","loading","width","height"],"sourceRoot":""}