{"version":3,"file":"static/js/342.ff4ef681.chunk.js","mappings":"mTACMA,EAAU,mCAEhBC,EAAAA,EAAAA,SAAAA,QAAyB,gCAElB,IAAMC,EAAW,eAAAC,GAAAC,EAAAA,EAAAA,GAAAC,IAAAA,MAAG,SAAAC,IAAA,IAAAC,EAAA,OAAAF,IAAAA,MAAA,SAAAG,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAE,KAAA,EACFT,EAAAA,EAAAA,IAAU,8BAADU,OAA+BX,IAAW,KAAD,EAA3D,OAARO,EAAQC,EAAAI,KAAAJ,EAAAK,OAAA,SACPN,EAASO,MAAI,wBAAAN,EAAAO,OAAA,GAAAT,EAAA,KACrB,kBAHuB,OAAAH,EAAAa,MAAA,KAAAC,UAAA,KAKXC,EAAY,eAAAC,GAAAf,EAAAA,EAAAA,GAAAC,IAAAA,MAAG,SAAAe,EAAMC,GAAK,IAAAd,EAAA,OAAAF,IAAAA,MAAA,SAAAiB,GAAA,cAAAA,EAAAb,KAAAa,EAAAZ,MAAA,cAAAY,EAAAZ,KAAA,EACdT,EAAAA,EAAAA,IAAU,wBAADU,OACNX,EAAO,0BAAAW,OAAyBU,EAAK,gCAC7D,KAAD,EAFa,OAARd,EAAQe,EAAAV,KAAAU,EAAAT,OAAA,SAGPN,EAASO,MAAI,wBAAAQ,EAAAP,OAAA,GAAAK,EAAA,KACrB,gBALwBG,GAAA,OAAAJ,EAAAH,MAAA,KAAAC,UAAA,KAOZO,EAAe,eAAAC,GAAArB,EAAAA,EAAAA,GAAAC,IAAAA,MAAG,SAAAqB,EAAMC,GAAE,IAAApB,EAAA,OAAAF,IAAAA,MAAA,SAAAuB,GAAA,cAAAA,EAAAnB,KAAAmB,EAAAlB,MAAA,cAAAkB,EAAAlB,KAAA,EACdT,EAAAA,EAAAA,IAAU,SAADU,OACrBgB,EAAE,aAAAhB,OAAYX,EAAO,oBAC9B,KAAD,EAFa,OAARO,EAAQqB,EAAAhB,KAAAgB,EAAAf,OAAA,SAGPN,EAASO,MAAI,wBAAAc,EAAAb,OAAA,GAAAW,EAAA,KACrB,gBAL2BG,GAAA,OAAAJ,EAAAT,MAAA,KAAAC,UAAA,KAOfa,EAAe,eAAAC,GAAA3B,EAAAA,EAAAA,GAAAC,IAAAA,MAAG,SAAA2B,EAAML,GAAE,IAAApB,EAAA,OAAAF,IAAAA,MAAA,SAAA4B,GAAA,cAAAA,EAAAxB,KAAAwB,EAAAvB,MAAA,cAAAuB,EAAAvB,KAAA,EACdT,EAAAA,EAAAA,IAAU,SAADU,OACrBgB,EAAE,qBAAAhB,OAAoBX,EAAO,oBACtC,KAAD,EAFa,OAARO,EAAQ0B,EAAArB,KAAAqB,EAAApB,OAAA,SAGPN,EAASO,MAAI,wBAAAmB,EAAAlB,OAAA,GAAAiB,EAAA,KACrB,gBAL2BE,GAAA,OAAAH,EAAAf,MAAA,KAAAC,UAAA,KAOfkB,EAAU,eAAAC,GAAAhC,EAAAA,EAAAA,GAAAC,IAAAA,MAAG,SAAAgC,EAAMV,GAAE,IAAApB,EAAA,OAAAF,IAAAA,MAAA,SAAAiC,GAAA,cAAAA,EAAA7B,KAAA6B,EAAA5B,MAAA,cAAA4B,EAAA5B,KAAA,EACTT,EAAAA,EAAAA,IAAU,SAADU,OACrBgB,EAAE,qBAAAhB,OAAoBX,EAAO,2BACtC,KAAD,EAFa,OAARO,EAAQ+B,EAAA1B,KAAA0B,EAAAzB,OAAA,SAGPN,EAASO,MAAI,wBAAAwB,EAAAvB,OAAA,GAAAsB,EAAA,KACrB,gBALsBE,GAAA,OAAAH,EAAApB,MAAA,KAAAC,UAAA,I,mIC5BVuB,EAAaC,EAAAA,GAAAA,OAAaC,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,yRAgB1BC,EAAaH,EAAAA,GAAAA,KAAWI,IAAAA,GAAAF,EAAAA,EAAAA,GAAA,qMAYxBG,EAAQL,EAAAA,GAAAA,MAAYM,IAAAA,GAAAJ,EAAAA,EAAAA,GAAA,iH,SCvBjC,EAJkB,SAAFxC,GAAA,IAAI6C,EAAQ7C,EAAR6C,SAAUC,EAAQ9C,EAAR8C,SAAQ,OAClCC,EAAAA,EAAAA,KAACN,EAAU,CAACI,SAAUA,EAASC,SAAEA,GAAsB,E,UCW3D,EAdmB,WAAF,OACbC,EAAAA,EAAAA,KAACJ,EAAK,CACNK,KAAK,OACLC,KAAK,YACLC,QAAQ,yHACRC,MAAM,0EACNC,UAAQ,EACRC,aAAa,MACbC,WAAS,EACTC,YAAY,mBACZ,ECLSC,EAAW,SAAFxD,GAAA,IAAI6C,EAAQ7C,EAAR6C,SAAQ,OAClCE,EAAAA,EAAAA,KAAA,OAAAD,UACIW,EAAAA,EAAAA,MAACC,EAAU,CAACb,SAAUA,EAASC,SAAA,EACnCC,EAAAA,EAAAA,KAACY,EAAW,KACVZ,EAAAA,EAAAA,KAACV,EAAU,CAACW,KAAK,SAAS,aAAW,gBAAeF,UAClDC,EAAAA,EAAAA,KAACa,EAAAA,IAAQ,UAGP,E,8BCZOC,EAAkBvB,EAAAA,GAAAA,GAASC,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,sEAM3BsB,GAAkBxB,EAAAA,EAAAA,IAAOyB,EAAAA,GAAPzB,CAAYI,IAAAA,GAAAF,EAAAA,EAAAA,GAAA,0ICuD3C,EAxDc,WAAK,IAADwB,EACZC,GAAWC,EAAAA,EAAAA,MACjBC,GAAwCC,EAAAA,EAAAA,MAAiBC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAAlDI,EAAYF,EAAA,GAAEG,EAAeH,EAAA,GAC9BI,EAAyC,QAAhCT,EAAGO,EAAaG,IAAI,oBAAY,IAAAV,EAAAA,EAAI,GACnDW,GAAoCC,EAAAA,EAAAA,UAAS,IAAGC,GAAAP,EAAAA,EAAAA,GAAAK,EAAA,GAAzCG,EAAUD,EAAA,GAAEE,EAAaF,EAAA,GAChCG,GAAkCJ,EAAAA,EAAAA,WAAS,GAAMK,GAAAX,EAAAA,EAAAA,GAAAU,EAAA,GAA1CE,EAASD,EAAA,GAAEE,EAAYF,EAAA,GAC9BG,GAA0BR,EAAAA,EAAAA,WAAS,GAAMS,GAAAf,EAAAA,EAAAA,GAAAc,EAAA,GAAlCE,EAAKD,EAAA,GAAEE,EAAQF,EAAA,IAEtBG,EAAAA,EAAAA,YAAU,WACY,KAAdf,IAGJM,EAAc,IACdI,GAAa,IACjBpE,EAAAA,EAAAA,IAAa0D,GAAWgB,MAAK,SAAA9E,GACzB,IAAIA,EAAK+E,QAAQC,OAGb,OAFAR,GAAa,GACbI,GAAS,GACFK,QAAQC,IAAI,yCAEvBN,GAAS,GACTR,EAAcpE,EAAK+E,SACnBP,GAAa,EACjB,IACA,GAAG,CAACV,IAWA,OACJhB,EAAAA,EAAAA,MAAA,OAAAX,SAAA,EACIC,EAAAA,EAAAA,KAACS,EAAS,CAACX,SAXM,SAAAiD,GACjBA,EAAEC,iBACF,IAAMC,EAAaF,EAAEG,cACrBzB,EAAgB,CAAEC,UAAWuB,EAAWE,SAASzB,UAAU0B,QAC3DH,EAAWI,OACf,IAOKd,IAASvC,EAAAA,EAAAA,KAAA,KAAAD,SAAG,6DACbW,EAAAA,EAAAA,MAACI,EAAe,CAAAf,SAAA,CACfgC,EAAWuB,KAAI,SAAAC,GACV,OACEvD,EAAAA,EAAAA,KAAA,MAAAD,UACEC,EAAAA,EAAAA,KAACe,EAAe,CAACyC,GAAE,WAAA/F,OAAa8F,EAAM9E,IAAMgF,MAAO,CAAEC,KAAMxC,GAAWnB,SACnEwD,EAAMI,gBAAkBJ,EAAMrD,QAF1BqD,EAAM9E,GAMnB,IACC0D,IAAanC,EAAAA,EAAAA,KAAC4D,EAAAA,EAAM,SAI7B,C","sources":["Api/api.js","components/SearchForm/SearchBar.styled.js","components/SearchForm/SearchForm.jsx","components/SearchForm/SearchInput.jsx","components/SearchForm/SearchBar.jsx","pages/Movies/Movies.styled.js","pages/Movies/Movies.jsx"],"sourcesContent":["import axios from 'axios';\nconst API_KEY = 'b3d3319c72d7aa893f843e4082479da1';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\n\nexport const getTrending = async () => {\n  const response = await axios.get(`trending/movie/day?api_key=${API_KEY}`);\n  return response.data;\n};\n\nexport const searchMovies = async query => {\n  const response = await axios.get(\n    `search/movie?api_key=${API_KEY}&language=en-US&query=${query}&page=1&include_adult=false`\n  );\n  return response.data;\n};\n\nexport const getMovieDetails = async id => {\n  const response = await axios.get(\n    `movie/${id}?api_key=${API_KEY}&language=en-US`\n  );\n  return response.data;\n};\n\nexport const getMovieCredits = async id => {\n  const response = await axios.get(\n    `movie/${id}/credits?api_key=${API_KEY}&language=en-US`\n  );\n  return response.data;\n};\n\nexport const getReviews = async id => {\n  const response = await axios.get(\n    `movie/${id}/reviews?api_key=${API_KEY}&language=en-US&page=1`\n  );\n  return response.data;\n};","import styled from 'styled-components';\n\n\nexport const ButtonIcon = styled.button`\n  display: flex;\n  align-items: center;\n  width: 30px;\n  height: 30px;\n  border: 0;\n  margin-right: 4px;\n  margin-left: 4px;\n  transition: all 250ms cubic-bezier(0.4, 0, 0.2, 1);\n  cursor: pointer;\n  outline: none;\n  &:hover {\n    transform: scale(1.2);\n  }\n`;\n\nexport const FormSearch = styled.form`\n  display: flex;\n  align-items: center;\n  width: 100%;\n  height: 30px;\n  max-width: 300px;\n  background-color: #fff;\n  border-radius: 3px;\n  overflow: hidden;\n  margin-top: 8px;\n`;\n\nexport const Input = styled.input`\n  width: 100%;\n  font-size: 16px;\n  &::placeholder {\n    font: inherit;\n    font-size: 16px;\n  }\n`;","import PropTypes from 'prop-types';\nimport { FormSearch } from './SearchBar.styled';\n\n\nconst SearchForm =({onSubmit, children})=>(\n    <FormSearch onSubmit={onSubmit}>{children}</FormSearch>\n);\n\nexport default SearchForm;\n\nSearchForm.propTypes = {\n    onSubmit: PropTypes.func.isRequired,\n  };","import { Input } from \"./SearchBar.styled\";\n\nconst SearchInput =()=> (\n    <Input\n    type=\"text\"\n    name=\"movieName\"\n    pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n    title=\"May contain only letters, apostrophe, dash and spaces. For example moon\"\n    required\n    autoComplete=\"off\"\n    autoFocus\n    placeholder=\"Search movie...\"\n  />\n);\n\n\nexport default SearchInput;","import PropTypes from 'prop-types';\nimport SearchForm from './SearchForm';\nimport { BsSearch } from 'react-icons/bs';\nimport SearchInput from './SearchInput';\nimport { ButtonIcon } from './SearchBar.styled';\n\n\nexport const SearchBar =({onSubmit})=>(\n<div>\n    <SearchForm onSubmit={onSubmit}>\n<SearchInput/>\n  <ButtonIcon type=\"submit\" aria-label=\"search button\">\n    <BsSearch/>\n  </ButtonIcon>\n  </SearchForm>\n</div>\n);\n\nSearchBar.propTypes = {\n    onSubmit: PropTypes.func.isRequired,\n  };\n\n\n\n","import styled from 'styled-components';\nimport { Link } from 'react-router-dom';\n\nexport const MovieSearchList = styled.ul`\n display: flex;\n  flex-direction: column;\nrow-gap: 10px;\n`;\n\nexport const MovieSearchLink = styled(Link)`\n&:hover {\n    border-radius:3px;\n    box-shadow: 1px 2px 4px 3px rgba(0, 0, 0, 0.5);\n};\ntext-decoration:none;\npadding: 2px;`;","import { searchMovies } from \"Api/api\";\nimport { Loader } from \"components/Loader/Loader\";\nimport { SearchBar } from \"components/SearchForm/SearchBar\";\nimport { useEffect, useState } from \"react\";\nimport { useLocation, useSearchParams } from \"react-router-dom\";\nimport { MovieSearchLink, MovieSearchList } from \"./Movies.styled\";\n\n\nconst Movies =()=>{\nconst location = useLocation();\nconst [searchParams, setSearchParams] = useSearchParams();\nconst movieName = searchParams.get('movieName') ?? '';\nconst [moviesList, setMoviesList] = useState([]);\nconst [isLoading, setIsLoading] = useState(false);\nconst [error, setError] = useState(false);\n\nuseEffect(() => {\n    if (movieName === '') {\n        return;\n    }\n    setMoviesList([]);\n    setIsLoading(true);\nsearchMovies(movieName).then(data => {\n    if(!data.results.length) {\n        setIsLoading(false);\n        setError(true);\n        return console.log('There is no movies. Please, try again');\n    }\n    setError(false); \n    setMoviesList(data.results);\n    setIsLoading(false);\n});\n}, [movieName]);\n\nconst handleSubmit = e => {\n    e.preventDefault();\n    const searchForm = e.currentTarget;\n    setSearchParams({ movieName: searchForm.elements.movieName.value });\n    searchForm.reset();\n}\n\n\n\n    return (\n<div>\n    <SearchBar onSubmit={handleSubmit}/>\n    {error && <p>There is no movies with this request. Please, try again</p>}\n    <MovieSearchList>\n    {moviesList.map(movie => {\n          return (\n            <li key={movie.id}>\n              <MovieSearchLink to={`/movies/${movie.id}`} state={{ from: location }}>\n                {movie.original_title || movie.name}\n              </MovieSearchLink>\n            </li>\n          );\n        })}\n        {isLoading && <Loader />}\n    </MovieSearchList>\n</div>\n    )\n}\n\n\nexport default Movies;"],"names":["API_KEY","axios","getTrending","_ref","_asyncToGenerator","_regeneratorRuntime","_callee","response","_context","prev","next","concat","sent","abrupt","data","stop","apply","arguments","searchMovies","_ref2","_callee2","query","_context2","_x","getMovieDetails","_ref3","_callee3","id","_context3","_x2","getMovieCredits","_ref4","_callee4","_context4","_x3","getReviews","_ref5","_callee5","_context5","_x4","ButtonIcon","styled","_templateObject","_taggedTemplateLiteral","FormSearch","_templateObject2","Input","_templateObject3","onSubmit","children","_jsx","type","name","pattern","title","required","autoComplete","autoFocus","placeholder","SearchBar","_jsxs","SearchForm","SearchInput","BsSearch","MovieSearchList","MovieSearchLink","Link","_searchParams$get","location","useLocation","_useSearchParams","useSearchParams","_useSearchParams2","_slicedToArray","searchParams","setSearchParams","movieName","get","_useState","useState","_useState2","moviesList","setMoviesList","_useState3","_useState4","isLoading","setIsLoading","_useState5","_useState6","error","setError","useEffect","then","results","length","console","log","e","preventDefault","searchForm","currentTarget","elements","value","reset","map","movie","to","state","from","original_title","Loader"],"sourceRoot":""}